version: "3.4"

services:
  tsdb:
    restart: "no"
    container_name: "aiodal_tsdb"
    image: timescale/timescaledb:2.5.1-pg13
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - pgdata:/var/lib/postgresql/data
    command: postgres -c 'max_connections=100'
    expose:
      - "5432"
    ports:
      - "5454:5432" # for debugging
    shm_size: 1g

  app:
    restart: "no"
    image: aiodal:dev
    container_name: "aiodal_app"
    build: .
    volumes:
      - .:/app
    command:
      - /bin/sh
      - -c
      - |
        PGPASSWORD=${POSTGRES_PASSWORD} dropdb -h tsdb -p 5432 -U ${POSTGRES_USER} -e -f --if-exists testdb && \
        PGPASSWORD=${POSTGRES_PASSWORD} createdb -h tsdb -p 5432 -U ${POSTGRES_USER} -e testdb
        poetry run alembic upgrade head
        poetry run pytest -s -v --cov=aiodal/ --cov-report=term-missing
        poetry run mypy aiodal --strict
        PGPASSWORD=${POSTGRES_PASSWORD} dropdb -h tsdb -p 5432 -U ${POSTGRES_USER} -e -f --if-exists testdb
    depends_on:
      - tsdb

volumes:
  pgdata:
