
services:
  pgdb:
    restart: "no"
    container_name: "aiodal_pgdb"
    image: postgres:15
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=testdb
    volumes:
      - pgdata:/var/lib/postgresql/data
    command: postgres -c 'max_connections=100'
    expose:
      - "5432"
    ports:
      - "5454:5432" # for debugging 
    shm_size: 1g

  # An example of a simple local test setup with postgres... called via Makefile
  testapp:
    restart: "no"
    image: aiodal:dev
    container_name: "aiodal_testapp"
    build:
      context: .
      dockerfile: ./Dockerfile
    volumes:
      - .:/app
    environment:
      - AUTH0_TESTING_CLIENT_SECRET=${AUTH0_TESTING_CLIENT_SECRET}
      - AUTH0_TESTING_CLIENT_ID=${AUTH0_TESTING_CLIENT_ID}
      - SLACK_WEBHOOK_URL=${SLACK_WEBHOOK_URL}
    command:
      - /bin/sh
      - -c
      - |
        PGPASSWORD=postgres dropdb -h pgdb -p 5432 -U postgres -e -f --if-exists testdb && \
        PGPASSWORD=postgres createdb -h pgdb -p 5432 -U postgres -e testdb
        poetry run alembic upgrade head
        coverage run --source=aiodal/ -m pytest -s -v && coverage report -m --fail-under=90
        poetry run mypy aiodal --strict
        poetry run mypy tests/crudapp.py --strict
        PGPASSWORD=postgres dropdb -h pgdb -p 5432 -U postgres -e -f --if-exists testdb
    depends_on:
      - pgdb

volumes:
  pgdata:


